"use strict";
// Work in progress still...
Object.defineProperty(exports, "__esModule", { value: true });
exports.CADActiveUnitsManager = void 0;
const CADActiveUnit_1 = require("../structures/CADActiveUnit");
const CacheManager_1 = require("./CacheManager");
class CADActiveUnitsManager extends CacheManager_1.CacheManager {
    constructor(instance, iterable, serverId) {
        super(instance, CADActiveUnit_1.CADActiveUnit, iterable);
        this.instance = instance;
        this.serverId = serverId;
    }
    _add(data, cache = true) {
        return super._add(data, cache, data.id);
    }
    fetch( /*options: CADActiveUnitResolvable | CADActiveUnitFetchOptions**/) {
        // if (!options) return this._fetchMany();
        this._fetchSingle({
            unit: -1,
            includeOffline: false,
            force: false
        });
    }
    async _fetchSingle({ unit, includeOffline = false, force = false }) {
        var _a, _b;
        if (!force) {
            const existing = this.cache.get(unit);
            if (existing)
                return existing;
        }
        const data = await ((_b = (_a = this.instance.cad) === null || _a === void 0 ? void 0 : _a.rest) === null || _b === void 0 ? void 0 : _b.request('GET_ACTIVE_UNITS', {
            serverId: this.serverId,
            includeOffline
        }));
        console.log(data);
    }
}
exports.CADActiveUnitsManager = CADActiveUnitsManager;
