"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DataManager = void 0;
const BaseManager_1 = require("./BaseManager");
const errors_1 = require("../errors");
const collection_1 = require("@discordjs/collection");
class DataManager extends BaseManager_1.BaseManager {
    constructor(instance, holds) {
        super(instance);
        /**
         * The data structure belonging to this manager.
         * @name DataManager#holds
         * @type {Function}
         * @private
         * @readonly
         */
        this.holds = holds;
    }
    /**
     * The cache of items for this manager.
     * @type {Collection}
     * @abstract
     */
    get cache() {
        throw new errors_1.GenericError('NOT_IMPLEMENTED', 'get cache', this.constructor.name);
    }
    /**
     * Resolves a data entry to a data Object.
     * @param idOrInstance The id or instance of something in this Manager
     * @returns {?Object} An instance from this Manager
     */
    resolve(idOrInstance) {
        var _a;
        if (this.cache instanceof collection_1.Collection) {
            if (typeof idOrInstance === 'object')
                return idOrInstance;
            if (typeof idOrInstance === 'string')
                return (_a = this.cache.get(idOrInstance)) !== null && _a !== void 0 ? _a : null;
        }
        return null;
    }
    /**
     * Resolves a data entry to an instance id.
     * @param {string|Object} idOrInstance The id or instance of something in this Manager
     * @returns {?Snowflake}
     */
    resolveId(idOrInstance) {
        if (typeof idOrInstance === 'object')
            return idOrInstance.id;
        if (typeof idOrInstance === 'string')
            return idOrInstance;
        return null;
    }
    valueOf() {
        return this.cache;
    }
}
exports.DataManager = DataManager;
