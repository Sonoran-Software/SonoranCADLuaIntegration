import { Instance } from '../instance/Instance';
import { Base } from './Base';
export interface CADActiveUnitStruct {
    id: number;
    accId: string;
    status: number;
    isPanic: boolean;
    location: string;
    aop: string;
    isDispatch: boolean;
    data: CADActiveUnitDataStruct;
}
interface CADActiveUnitStructPartial {
    id: number;
    accId: string;
    status: number;
    isPanic: boolean;
    location: string;
    aop: string;
    isDispatch: boolean;
    data: Partial<CADActiveUnitDataStruct>;
}
export interface CADActiveUnitDataStruct {
    apiId1: string;
    apiId2: string;
    unitNum: string;
    name: string;
    district: string;
    department: string;
    subdivision: string;
    rank: string;
    group: string;
}
export type CADActiveUnitResolvable = CADActiveUnit | number;
export declare class CADActiveUnit extends Base {
    id: number;
    accId: string;
    status: number;
    isPanic: boolean;
    location: string;
    aop: string;
    isDispatch: boolean;
    data: CADActiveUnitDataStruct;
    constructor(instance: Instance, data: any);
    _patch(data: Partial<CADActiveUnitStructPartial>): void;
}
export {};
