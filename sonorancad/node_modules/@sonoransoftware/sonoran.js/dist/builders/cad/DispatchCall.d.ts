import { CADNewDispatchBuilderOptions } from '../../constants';
import { CADDispatchOriginEnums, CADDispatchStatusEnums } from '../../libs/rest/src';
/**
 * Represents a constructed dispatch call for API requests
 */
export declare class DispatchCallBuilder {
    readonly data: CADNewDispatchBuilderOptions;
    /**
     * Dispatch Call Builder used for API calls with Sonoran CAD to create a new dispatch call.
     * @param data Data Options (CADNewDispatchBuilderOptions) used to build the new dispatch call
     */
    constructor(data?: CADNewDispatchBuilderOptions);
    /**
       * Sets the origin for this dispatch call
     * @param origin Origin enum used for this dispatch call for information purposes
       */
    setOrigin(origin: CADDispatchOriginEnums): this;
    /**
       * Sets the status for this dispatch call
     * @param status Status enum used for the dispatch call for information purposes
       */
    setStatus(status: CADDispatchStatusEnums): this;
    /**
       * Sets the priority level for this dispatch call
     * @param priority Priority level used for the dispatch call for information purposes
       */
    setPriority(priority: 1 | 2 | 3): this;
    /**
       * Sets the block for this dispatch call
     * @param block Block used for the dispatch call for information purposes
       */
    setBlock(block: string): this;
    /**
       * Sets the address for this dispatch call
     * @param address Address used for the dispatch call for information purposes
       */
    setAddress(address: string): this;
    /**
       * Sets the postal for this dispatch call
     * @param postal Postal used for the dispatch call for information purposes
       */
    setPostal(postal: string): this;
    /**
       * Sets the title for this dispatch call
     * @param title Title used for the dispatch call for information purposes
       */
    setTitle(title: string): this;
    /**
       * Sets the code for this dispatch call
     * @param code Code used for the dispatch call for information purposes
       */
    setCode(code: string): this;
    /**
       * Sets the primary tracking preference for this dispatch call
     * @param primaryUnit Primary unit identifier
       */
    setPrimary(primaryUnit: number): this;
    /**
       * Sets the track primary preference for this dispatch call
     * @param preference Preference for tracking primary
       */
    setTrackPrimaryPreference(preference: boolean): this;
    /**
       * Sets the description for this dispatch call
     * @param description Description for a dispatch call
       */
    setDescription(description: string): this;
    /**
       * Sets metadata for this dispatch call that can be used later on
     * @param metaData Dictionary of metadata to store with a dispatch call, can be used later on
       */
    setMetadata(metaData: Record<string, string>): this;
    /**
       * Sets specified units for this dispatch call
     * @param units Units to be removed from a call
       */
    setUnits(units: string[]): this;
    /**
       * Adds specified units from this dispatch call
     * @param units Units to be removed from a call
       */
    addUnits(...units: string[]): this;
    /**
       * Removes specified units from this dispatch call
     * @param units Units to be removed from a call
       */
    removeUnits(...units: string[]): this;
    /**
       * Transforms the dispatch call to a plain object
       */
    toJSON(): CADNewDispatchBuilderOptions;
}
